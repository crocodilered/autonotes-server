# Generated by Django 3.0.4 on 2020-04-17 16:15

import autonotes.notes.paths
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        ('vehicles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
                ('shared', models.BooleanField(db_index=True, default=False)),
                ('attachment1', models.FileField(null=True, upload_to=autonotes.notes.paths.attachments_path)),
                ('attachment2', models.FileField(null=True, upload_to=autonotes.notes.paths.attachments_path)),
                ('attachment3', models.FileField(null=True, upload_to=autonotes.notes.paths.attachments_path)),
                ('cost', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('run', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('created', models.DateField(auto_now_add=True, db_index=True)),
                ('updated', models.DateField(auto_now=True)),
                ('kind', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='notes.Kind')),
                ('tags', models.ManyToManyField(related_name='notes', to='tags.Tag')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='vehicles.Vehicle')),
            ],
            options={
                'ordering': ('-created', '-id'),
            },
        ),
    ]
